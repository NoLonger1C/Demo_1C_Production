
Процедура ОбработкаПроведения(Отказ,Режим)

	//1. Формирование набора по данным документа
	// регистр Начисления
	Движения.Начисления.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеНачисления из ОсновныеНачисления Цикл
		Движение = Движения.Начисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.ФизическиеЛица = ТекСтрокаОсновныеНачисления.Сотрудник.ФизическоеЛицо;//здесь понятно, что подзапрос, не хочу переделывать
		Движение.ГрафикРаботы = ТекСтрокаОсновныеНачисления.График;
	КонецЦикла;
	
	//формирование сторно записей
	ТаблицаДополнений = Движения.Начисления.ПолучитьДополнение();
	Для Каждого Строка Из ТаблицаДополнений Цикл	
		Движение = Движения.Начисления.Добавить();
		Движение.Сторно = Истина;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодРегистрации = Строка.ПериодРегистрацииСторно;
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = КонецДня(Строка.ПериодДействияКонецСторно);
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ФизическиеЛица = Строка.Сотрудник.ФизическоеЛицо;
		Движение.ГрафикРаботы = Строка.ГрафикРаботы;
		Движение.Размер = Строка.Размер; //оклад прерыдущего периода ,т.к. сторно за предыдущий период		
	КонецЦикла; 
	
	//Дополнительные начисления
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;  
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);  
		Движение.ФизическиеЛица = ТекСтрокаДополнительныеНачисления.Сотрудник.ФизическоеЛицо;//здесь понятно, что подзапрос, не хочу переделывать
	КонецЦикла;
	
	Движения.Записать();
	
	//2. Расчет по фактическому времени
	
	//Оклад

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияДанныеГрафика.НомерСтроки,
	|	ЕСТЬNULL(НачисленияДанныеГрафика.ДниПериодДействия, 0) КАК ДниПериодДействия,
	|	ЕСТЬNULL(НачисленияДанныеГрафика.ДниФактическийПериодДействия, 0) КАК ДниФактическийПериодДействия,
	|	НачисленияДанныеГрафика.Сотрудник,
	|	НачисленияДанныеГрафика.ФизическиеЛица
	|ПОМЕСТИТЬ ДанныеГрафика
	|ИЗ
	|	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
	|	И ВидРасчета = &ВидРасчетаОклад) КАК НачисленияДанныеГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТарифныеСтавкиСотрудниковСрезПоследних.ФОТ, 0) КАК ФОТ,
	|	ДанныеГрафика.ДниПериодДействия,
	|	ДанныеГрафика.ДниФактическийПериодДействия,
	|	ДанныеГрафика.НомерСтроки
	|ИЗ
	|	ДанныеГрафика КАК ДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифныеСтавкиСотрудников.СрезПоследних(&НачалоМесяца, (Сотрудинк, ФизическоеЛицо)
	|			В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ДанныеГрафика.Сотрудник,
	|				ДанныеГрафика.ФизическиеЛица
	|			ИЗ
	|				ДанныеГрафика)) КАК ТарифныеСтавкиСотрудниковСрезПоследних
	|		ПО ДанныеГрафика.Сотрудник = ТарифныеСтавкиСотрудниковСрезПоследних.Сотрудинк
	|		И ДанныеГрафика.ФизическиеЛица = ТарифныеСтавкиСотрудниковСрезПоследних.ФизическоеЛицо";

	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.Начисления.Оклад);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаОклада = РезультатЗапроса.Выбрать();
			
	Для Каждого Строка Из Движения.Начисления Цикл
		
		Если Строка.ВидРасчета <> ПланыВидовРасчета.Начисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаОклада.Сбросить();
		ВыборкаОклада.НайтиСледующий(Строка.НомерСтроки,"НомерСтроки");
		
		Если Строка.Сторно Тогда
			Строка.Результат = ?(ВыборкаОклада.ДниПериодДействия = 0,0, 
				-Строка.Размер / ВыборкаОклада.ДниПериодДействия * ВыборкаОклада.ДниФактическийПериодДействия * 0.87);
		Иначе
			Строка.Результат = ?(ВыборкаОклада.ДниПериодДействия = 0,0, 
				ВыборкаОклада.ФОТ / ВыборкаОклада.ДниПериодДействия * ВыборкаОклада.ДниФактическийПериодДействия * 0.87);
			Строка.Размер = ВыборкаОклада.ФОТ;
		КонецЕсли;
		
		Строка.Факт = ВыборкаОклада.ДниФактическийПериодДействия;
		
	КонецЦикла;	
	
	//Движения.Начисления.Записать();
	
	//Больничный

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачисленияДанныеГрафика.НомерСтроки,
		|	ЕСТЬNULL(НачисленияДанныеГрафика.ДниФактическийПериодДействия, 0) КАК ДниФактическийПериодДействия,
		|	СтавкаБольничного.Значение КАК Ставка
		|ИЗ
		|	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
		|	И ВидРасчета = &ВидРасчетаБольничный) КАК НачисленияДанныеГрафика,
		|	Константа.СтавкаБольничного КАК СтавкаБольничного";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаБольничный", ПланыВидовРасчета.Начисления.Больничный);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаБольничный = РезультатЗапроса.Выбрать();

	Для Каждого Строка Из Движения.Начисления Цикл
		
		Если Строка.ВидРасчета <> ПланыВидовРасчета.Начисления.Больничный Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаБольничный.Сбросить();
		ВыборкаБольничный.НайтиСледующий(Строка.НомерСтроки,"НомерСтроки");
		
		Строка.Результат = ВыборкаБольничный.Ставка * ВыборкаБольничный.ДниФактическийПериодДействия*0.87;
		Строка.Факт = ВыборкаБольничный.ДниФактическийПериодДействия;
		Строка.Размер = ВыборкаБольничный.Ставка;
		
	КонецЦикла;	
	
	//Движения.Начисления.Записать(,Истина);
	
	//3. Фиксированные начисления
	СуммаПремия = Константы.РазмерКомпенсацииСпорта.Получить();
	
	Для Каждого Строка Из Движения.Начисления Цикл
		
		Если Строка.ВидРасчета <> ПланыВидовРасчета.Начисления.ПремияСуммой Тогда
			Продолжить;
		КонецЕсли;
		
		Строка.Результат = СуммаПремия;
		Строка.Факт = 0;
		Строка.Размер = СуммаПремия;
		
	КонецЦикла;	
	
	Движения.Начисления.Записать(,Истина);
	
	//4. Премия по базе 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаНачисления.РезультатБаза КАК РезультатБаза
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчетаПремия) КАК ДополнительныеНачисленияБазаНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("ФизическиеЛица");
	Запрос.УстановитьПараметр("ВидРасчетаПремия", ПланыВидовРасчета.ДополнительныеНачисления.ПремияПоОкладу);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкПремия = РезультатЗапроса.Выбрать();
	
	Для каждого Строка Из Движения.ДополнительныеНачисления Цикл
		
		Если Строка.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.ПремияПоОкладу Тогда
			Продолжить;
		КонецЕсли;
		ВыборкПремия.Сбросить();
		Если ВыборкПремия.НайтиСледующий(Строка.НомерСтроки,"НомерСтроки") Тогда
			Строка.Результат = ВыборкПремия.РезультатБаза * 0.3 / 0.7; 
			Строка.База = ВыборкПремия.РезультатБаза;	
		КонецЕсли;		
	
	КонецЦикла;

	Движения.ДополнительныеНачисления.Записать(,Истина);
	

КонецПроцедуры